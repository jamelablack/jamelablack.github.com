<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>grit| commit</title>
 <link href="http://jamelablack.github.io/atom.xml" rel="self"/>
 <link href="http://jamelablack.github.io/"/>
 <updated>2015-05-06T13:03:41-04:00</updated>
 <id>http://jamelablack.github.io</id>
 <author>
   <name>Jam Black</name>
   <email></email>
 </author>

 
 <entry>
   <title>Pass by what?</title>
   <link href="http://jamelablack.github.io/2014/09/01/pass-by/"/>
   <updated>2014-09-01T00:00:00-04:00</updated>
   <id>http://jamelablack.github.io/2014/09/01/pass-by</id>
   <content type="html">&lt;p&gt;Pass by Value vs Pass by Reference:
  Pass by Value - when a method is called on an object, the variable is just representation of the value and not the actual object (the reference), itself. When called, the method can never change the object itself. To effect change to the object, you must reassgn the variable.&lt;/p&gt;

&lt;p&gt;In this case below, outter_str remains unchanged as a result of the method being called.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;changeit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;outter_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;some_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outter_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;

&lt;p&gt;Pass by Reference - When a method is called, the object acts a pointer and a modification is actually made to an actual space in memory.&lt;/p&gt;

&lt;p&gt;In the case below, outter_str is just a reference (pointer) to str, therefore any mutations to str will be reflected in the value of str&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;changeit&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;outter_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hi&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;some_method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outter_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ruby is Passing by the Reference of the Caller
  Whether or not the method creates a pass by reference or pass by reference scenario depends on whether the method mutates the caller or not&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>My name is Jam, and I am a Rails Developer</title>
   <link href="http://jamelablack.github.io/2014/08/30/path-to-becoming-a-ruby-dev/"/>
   <updated>2014-08-30T00:00:00-04:00</updated>
   <id>http://jamelablack.github.io/2014/08/30/path-to-becoming-a-ruby-dev</id>
   <content type="html">&lt;p&gt;This is my path to becoming a Ruby on Rails Developer. I first was exposed to code back in June 2013, after attending a Rails Girls Workshop in Washington, DC. At that workshop, a very notable leader in the Ruby community, &lt;a href=&quot;http://www.sandimetz.com/&quot;&gt;Sandi Metz&lt;/a&gt; gave a talk on &lt;a href=&quot;http://en.wikipedia%20org/wiki/Grit_%28personality_trait%29&quot;&gt;grit&lt;/a&gt;. Up until that point, I thought that being a developer was reserved for those with computer science majors and or mathmeticians. But her talk, gave me some sort of hope that if I worked hard enough, becoming a developer was possible. So with that, I set on my journey of being a self taught developer. One thing that I have learned in this process, learning to code is circular.. not linear. Often times, it may require seeing a concept 3 or 4 times before you can tackle it without googling the concept.. and what I&amp;#39;ve had to learn is that is okay. I had to let go the idea that I wasn&amp;#39;t going to remember everything but with experience.. I could figure it out or at least know resources to leverage to find my answer. This blog is to document concepts that I&amp;#39;ve learned becasue I am bound to forget.. and that&amp;#39;s okay. In case you&amp;#39;re reading this... I hope you enjoy.&lt;/p&gt;

&lt;p&gt;Tags:  &lt;a href=&quot;thoughts&quot;&gt; thoughts &lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
